#summary JSON output stream
=== Module Description ===
The jos module implements an JSON (Javascript Object Notation)
writer. JSON is a lightweight data interchange format. See
[http://www.json.org]. The jos module extends the tos module with extra
words, so the tos words can be used on a jos variable. The module checks
the use of the writer words in relation to the syntax. If a word is used
outside the syntax, an exp-invalid-state exception is thrown.

=== Module Words ===
==== JSON output stream structure ====
*jos%* ( -- n )
 Get the required space for a jos writer variable
==== JSON output stream creation, initialisation and destruction ====
*jos-init* ( jos -- )
 Initialise an empty output stream
*jos-(free)* ( tos -- )
 Free the stream data from the heap
*jos-create* ( "{{{<}}}spaces{{{>}}}name" -- ; -- jos )
 Create a named JSON output stream in the dictionary
*jos-new* ( -- jos )
 Create a new JSON output stream on the heap
*jos-free* ( jos -- )
 Free the JSON output stream from the heap
==== json writer words ====
*jos-write-start-object* ( jos -- )
 Write the start of an object
*jos-write-end-object* ( jos -- )
 Write the end of an object
*jos-write-start-array* ( jos -- )
 Write the start of an array
*jos-write-end-array* ( jos -- )
 Write the end of an array
*jos-write-name* ( c-addr u jos -- )
 Write a name
*jos-write-string* ( c-addr u jos -- )
 Write a string value
*jos-write-number* ( n jos -- )
 Write a number as value
*jos-write-double* ( d jos -- )
 Write a double as value
*jos-write-float* ( r jos -- )
 Write a float as value
*jos-write-boolean* ( flag jos -- )
 Write a boolean as value
*jos-write-nil* ( jos -- )
 Write the nil pointer as value
*jos-dump* ( jos -- )
 Dump the jos variable
=== Examples ===
{{{
include ffl/jos.fs


\ Example : Write json output


\ Create the json output stream in the dictionary

jos-create jos1

jos1 jos-write-start-object           \ Write the start of a json object 

s" number" jos1 jos-write-name        \ Write a number with its value
5          jos1 jos-write-number

s" array"  jos1 jos-write-name        \ Write an array with three members
           jos1 jos-write-start-array
7          jos1 jos-write-number
true       jos1 jos-write-boolean
s" hello"  jos1 jos-write-string
           jos1 jos-write-end-array

jos1 jos-write-end-object             \ Write the end of the object

jos1 str-get type cr                  \ Type the json output
}}}
----
Generated by *ofcfrth-0.10.0*
