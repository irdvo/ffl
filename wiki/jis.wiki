#summary JSON input stream
=== Module Description ===
The jis module implements a validating JSON parser.
The jis-set-reader word expects an execution token with the following
stack behavior:
{{{
   x -- c-addr u | 0
}}}
Data x is the same as the first parameter during calling of the word
xis-set-reader. For reading from files this is normally the file
descriptor. The word returns, if successful, the read data in c-addr u.
The jis-read word returns the parsed json token with the following varying
stack parameters:
{{{
jis.error          --             = Error
jis.done           --             = Stream is correctly parsed
jis.start-object   --             = Start of new object
jis.end-object     --             = End of object
jis.start-array    --             = Start of new array
jis.end-array      --             = End of array
jis.name           -- c-addr u    = Name as string
jis.string         -- c-addr u    = String value
jis.number         -- n           = Number value
jis.double         -- d           = Double value
jis.float          -- r           = Float value
jis.boolean        -- flag        = Boolean value
jis.null           --             = Null value
}}}

=== Module Words ===
==== json reader constants ====
*jis.error* ( -- n )
 Error
*jis.done* ( -- n )
 Done reading
*jis.start-object* ( -- n )
 Start object
*jis.start-array* ( -- n )
 Start array
*jis.name* ( -- n )
 Name
*jis.string* ( -- n )
 String value
*jis.number* ( -- n )
 Number value
*jis.double* ( -- n )
 Double value
*jis.float* ( -- n )
 Float value
*jis.boolean* ( -- n )
 Boolean value
*jis.null* ( -- n )
 Null value
*jis.end-object* ( -- n )
 End object
*jis.end-array* ( -- n )
 End array
==== json reader structure ====
*jis%* ( -- n )
 Get the required space for a jis reader variable
==== xml reader variable creation, initialisation and destruction ====
*jis-init* ( jis -- )
 Initialise the json reader variable
*jis-(free)* ( xis -- )
 Free the internal, private variables from the heap
*jis-create* ( "{{{<}}}spaces{{{>}}}name" -- ; -- jis )
 Create a named json reader variable in the dictionary
*jis-new* ( -- jis )
 Create a new json reader variable on the heap
*jis-free* ( jis -- )
 Free the jis reader variable from the heap
==== json reader init words ====
*jis-set-reader* ( x xt jis -- )
 Init the json parser for reading using the reader callback xt with its data x
*jis-set-string* ( c-addr u jis -- )
 Init the json parser for for reading from the string c-addr u
==== json reader word ====
*jis-read* ( jis -- i*x n )
 Read the next json token n with its parameters from the source (see json reader constants)
*jis+remove-read-parameters* ( i*x n -- )
 Remove the various parameters of a json token after calling xis-read (see xml reader constants)

----
Generated by *ofcfrth-0.10.0*
